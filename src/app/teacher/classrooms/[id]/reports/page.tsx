'use client'

import { useState } from 'react'
import Link from 'next/link'
import { useParams } from 'next/navigation'

export default function ClassroomReportsPage() {
  const params = useParams()
  const classroomId = params.id as string

  // Mock data - ‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏à‡∏∞ fetch ‡∏à‡∏≤‡∏Å API
  const [classroom] = useState({
    id: classroomId,
    name: '‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏°.6/1',
    code: 'MATH601',
    subject: '‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',
    grade: '‡∏°.6',
    section: '1',
    teacherName: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
    studentCount: 32
  })

  const [dateRange, setDateRange] = useState('this-month') // this-week, this-month, last-month, custom
  const [reportType, setReportType] = useState('overview') // overview, detailed, individual
  const [viewMode, setViewMode] = useState('cards') // cards, table, chart
  const [selectedMetric, setSelectedMetric] = useState('attendance') // attendance, punctuality, trends
  
  // Export notification states
  const [exportStatus, setExportStatus] = useState<{
    isExporting: boolean
    format: string
    progress: number
    success: boolean
    error: string | null
    currentMessage: string
  }>({
    isExporting: false,
    format: '',
    progress: 0,
    success: false,
    error: null,
    currentMessage: ''
  })

  // Mock attendance data
  const [attendanceStats] = useState({
    totalSessions: 24,
    averageAttendance: 87.5,
    onTimeRate: 92.3,
    lateRate: 5.2,
    absentRate: 2.5,
    bestAttendanceDay: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
    worstAttendanceDay: '‡∏®‡∏∏‡∏Å‡∏£‡πå'
  })

  const [dailyStats] = useState([
    { date: '2024-10-14', present: 30, late: 2, absent: 0, rate: 100 },
    { date: '2024-10-15', present: 28, late: 3, absent: 1, rate: 96.9 },
    { date: '2024-10-16', present: 29, late: 1, absent: 2, rate: 93.8 },
    { date: '2024-10-17', present: 31, late: 1, absent: 0, rate: 100 },
  ])

  const [studentStats] = useState([
    { id: '1', name: '‡∏ô‡∏≤‡∏¢ ‡∏Å ‡πÉ‡∏à‡∏î‡∏µ', present: 22, late: 1, absent: 1, rate: 95.8, trend: 'up' },
    { id: '2', name: '‡∏ô‡∏≤‡∏á ‡∏Ç ‡∏™‡∏ö‡∏≤‡∏¢', present: 21, late: 2, absent: 1, rate: 91.7, trend: 'stable' },
    { id: '3', name: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß ‡∏Ñ ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à', present: 19, late: 3, absent: 2, rate: 83.3, trend: 'down' },
    { id: '4', name: '‡∏ô‡∏≤‡∏¢ ‡∏á ‡∏£‡∏π‡πâ‡∏à‡∏£‡∏¥‡∏á', present: 23, late: 1, absent: 0, rate: 100, trend: 'up' },
    { id: '5', name: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß ‡∏à ‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏à', present: 20, late: 2, absent: 2, rate: 87.5, trend: 'stable' },
  ])

  const [attendanceData] = useState([
    { id: '1', name: '‡∏ô‡∏≤‡∏¢ ‡∏Å ‡πÉ‡∏à‡∏î‡∏µ', studentId: 'STD001', present: 22, late: 1, absent: 1, attendanceRate: 95.8 },
    { id: '2', name: '‡∏ô‡∏≤‡∏á ‡∏Ç ‡∏™‡∏ö‡∏≤‡∏¢', studentId: 'STD002', present: 21, late: 2, absent: 1, attendanceRate: 91.7 },
    { id: '3', name: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß ‡∏Ñ ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à', studentId: 'STD003', present: 19, late: 3, absent: 2, attendanceRate: 83.3 },
    { id: '4', name: '‡∏ô‡∏≤‡∏¢ ‡∏á ‡∏£‡∏π‡πâ‡∏à‡∏£‡∏¥‡∏á', studentId: 'STD004', present: 23, late: 1, absent: 0, attendanceRate: 100 },
    { id: '5', name: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß ‡∏à ‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏à', studentId: 'STD005', present: 20, late: 2, absent: 2, attendanceRate: 87.5 },
    { id: '6', name: '‡∏ô‡∏≤‡∏¢ ‡∏â ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ', studentId: 'STD006', present: 18, late: 4, absent: 2, attendanceRate: 83.3 },
  ])

  const [weeklyPattern] = useState([
    { day: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', average: 95.2, sessions: 4 },
    { day: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£', average: 89.3, sessions: 4 },
    { day: '‡∏û‡∏∏‡∏ò', average: 87.1, sessions: 4 },
    { day: '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ', average: 85.7, sessions: 4 },
    { day: '‡∏®‡∏∏‡∏Å‡∏£‡πå', average: 82.9, sessions: 4 },
  ])

  const getTrendIcon = (trend: string) => {
    switch (trend) {
      case 'up': return 'üìà'
      case 'down': return 'üìâ'
      case 'stable': return '‚û°Ô∏è'
      default: return '‚û°Ô∏è'
    }
  }

  const getAttendanceColor = (rate: number) => {
    if (rate >= 95) return 'text-green-600 bg-green-100'
    if (rate >= 90) return 'text-blue-600 bg-blue-100'
    if (rate >= 80) return 'text-yellow-600 bg-yellow-100'
    if (rate >= 70) return 'text-orange-600 bg-orange-100'
    return 'text-red-600 bg-red-100'
  }

  const exportReport = async (format: 'excel' | 'pdf') => {
    // Reset previous state
    setExportStatus({
      isExporting: true,
      format: format.toUpperCase(),
      progress: 0,
      success: false,
      error: null,
      currentMessage: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...'
    })

    try {
      // Simulate export process with progress
      const steps = format === 'excel' ? [
        { progress: 15, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô...' },
        { progress: 35, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á Excel...' },
        { progress: 55, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ã‡∏•‡∏•‡πå...' },
        { progress: 75, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏†‡∏π‡∏°‡∏¥...' },
        { progress: 90, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel...' },
        { progress: 100, message: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! üìä' }
      ] : [
        { progress: 20, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå PDF...' },
        { progress: 40, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô...' },
        { progress: 60, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏ï‡∏≤‡∏£‡∏≤‡∏á...' },
        { progress: 80, message: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö PDF...' },
        { progress: 100, message: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå PDF ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! üìÑ' }
      ]

      for (const step of steps) {
        await new Promise(resolve => setTimeout(resolve, 800))
        setExportStatus(prev => ({
          ...prev,
          progress: step.progress,
          currentMessage: step.message
        }))
      }

      // Simulate successful export
      setExportStatus(prev => ({
        ...prev,
        isExporting: false,
        success: true,
        currentMessage: `‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ${format.toUpperCase()} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`
      }))

      // Auto hide success notification after 5 seconds
      setTimeout(() => {
        setExportStatus(prev => ({
          ...prev,
          success: false,
          currentMessage: ''
        }))
      }, 5000)

    } catch (error) {
      setExportStatus(prev => ({
        ...prev,
        isExporting: false,
        error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á',
        currentMessage: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î'
      }))

      // Auto hide error notification after 5 seconds
      setTimeout(() => {
        setExportStatus(prev => ({
          ...prev,
          error: null,
          currentMessage: ''
        }))
      }, 5000)
    }
  }



  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-blue-100">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-blue-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center space-x-4">
              <Link href="/classrooms" className="text-blue-600 hover:text-blue-700">
                ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
              </Link>
              <div>
                <h1 className="text-xl font-bold text-gray-900">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h1>
                <p className="text-sm text-gray-500">{classroom.name} - {classroom.teacherName}</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-3">
              <button
                onClick={() => exportReport('excel')}
                disabled={exportStatus.isExporting}
                className="bg-green-600 hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg font-medium transition-colors flex items-center space-x-2"
              >
                {exportStatus.isExporting && exportStatus.format === 'EXCEL' ? (
                  <>
                    <div className="animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full"></div>
                    <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å...</span>
                  </>
                ) : (
                  <>
                    <span>üìä</span>
                    <span>Excel</span>
                  </>
                )}
              </button>
              <button
                onClick={() => exportReport('pdf')}
                disabled={exportStatus.isExporting}
                className="bg-red-600 hover:bg-red-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg font-medium transition-colors flex items-center space-x-2"
              >
                {exportStatus.isExporting && exportStatus.format === 'PDF' ? (
                  <>
                    <div className="animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full"></div>
                    <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å...</span>
                  </>
                ) : (
                  <>
                    <span>üìÑ</span>
                    <span>PDF</span>
                  </>
                )}
              </button>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Enhanced Filter Controls */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-8">
          <div className="flex flex-col lg:flex-row lg:items-end lg:justify-between gap-6">
            <div className="grid md:grid-cols-3 gap-4 flex-1">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  üìÖ ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
                </label>
                <select
                  value={dateRange}
                  onChange={(e) => setDateRange(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 bg-white"
                >
                  <option value="this-week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ</option>
                  <option value="this-month">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</option>
                  <option value="last-month">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</option>
                  <option value="this-semester">‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ</option>
                  <option value="custom">‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á</option>
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  üìä ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
                </label>
                <select
                  value={reportType}
                  onChange={(e) => setReportType(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 bg-white"
                >
                  <option value="overview">‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</option>
                  <option value="detailed">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</option>
                  <option value="individual">‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</option>
                  <option value="comparative">‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  üìà ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î
                </label>
                <select
                  value={selectedMetric}
                  onChange={(e) => setSelectedMetric(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 bg-white"
                >
                  <option value="attendance">‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</option>
                  <option value="punctuality">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏£‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤</option>
                  <option value="trends">‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°</option>
                  <option value="patterns">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö</option>
                </select>
              </div>
            </div>

            {/* View Mode Toggle */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                üëÅÔ∏è ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
              </label>
              <div className="flex bg-gray-100 rounded-lg p-1">
                {[
                  { key: 'cards', icon: 'üìã', label: '‡∏Å‡∏≤‡∏£‡πå‡∏î' },
                  { key: 'table', icon: 'üìä', label: '‡∏ï‡∏≤‡∏£‡∏≤‡∏á' },
                  { key: 'chart', icon: 'üìà', label: '‡∏Å‡∏£‡∏≤‡∏ü' }
                ].map((mode) => (
                  <button
                    key={mode.key}
                    onClick={() => setViewMode(mode.key)}
                    className={`flex-1 px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                      viewMode === mode.key
                        ? 'bg-blue-600 text-white shadow-sm'
                        : 'text-gray-600 hover:text-gray-900'
                    }`}
                  >
                    <span className="mr-1">{mode.icon}</span>
                    {mode.label}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Enhanced Overview Stats */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl shadow-lg p-6 text-white relative overflow-hidden">
            <div className="absolute top-0 right-0 w-20 h-20 bg-white bg-opacity-10 rounded-full -mr-10 -mt-10"></div>
            <div className="relative">
              <div className="text-4xl font-bold mb-2">{attendanceStats.totalSessions}</div>
              <div className="text-blue-100 text-sm">‡∏Ñ‡∏≤‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
              <div className="mt-2 text-xs text-blue-200">üìö ‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ</div>
            </div>
          </div>
          
          <div className="bg-gradient-to-r from-green-500 to-green-600 rounded-xl shadow-lg p-6 text-white relative overflow-hidden">
            <div className="absolute top-0 right-0 w-20 h-20 bg-white bg-opacity-10 rounded-full -mr-10 -mt-10"></div>
            <div className="relative">
              <div className="text-4xl font-bold mb-2">{attendanceStats.averageAttendance}%</div>
              <div className="text-green-100 text-sm">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</div>
              <div className="mt-2 text-xs text-green-200">üìä ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°</div>
            </div>
          </div>
          
          <div className="bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl shadow-lg p-6 text-white relative overflow-hidden">
            <div className="absolute top-0 right-0 w-20 h-20 bg-white bg-opacity-10 rounded-full -mr-10 -mt-10"></div>
            <div className="relative">
              <div className="text-4xl font-bold mb-2">{attendanceStats.onTimeRate}%</div>
              <div className="text-purple-100 text-sm">‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤</div>
              <div className="mt-2 text-xs text-purple-200">‚è∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏£‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤</div>
            </div>
          </div>
          
          <div className="bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl shadow-lg p-6 text-white relative overflow-hidden">
            <div className="absolute top-0 right-0 w-20 h-20 bg-white bg-opacity-10 rounded-full -mr-10 -mt-10"></div>
            <div className="relative">
              <div className="text-4xl font-bold mb-2">{attendanceStats.lateRate}%</div>
              <div className="text-orange-100 text-sm">‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏¢</div>
              <div className="mt-2 text-xs text-orange-200">üö∂‚Äç‚ôÇÔ∏è ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á</div>
            </div>
          </div>
        </div>

        {/* Quick Insights Panel */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-8">
          <h3 className="text-lg font-bold text-gray-900 mb-4 flex items-center">
            <span className="mr-2">üîç</span>
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÄ‡∏£‡πá‡∏ß
          </h3>
          <div className="grid md:grid-cols-3 gap-4">
            <div className="bg-green-50 border border-green-200 rounded-lg p-4">
              <div className="flex items-center space-x-2 mb-2">
                <span className="text-green-600">üìà</span>
                <span className="font-medium text-green-800">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</span>
              </div>
              <p className="text-sm text-green-700">
                ‡∏ß‡∏±‡∏ô{attendanceStats.bestAttendanceDay} ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
              </p>
            </div>
            
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
              <div className="flex items-center space-x-2 mb-2">
                <span className="text-yellow-600">‚ö†Ô∏è</span>
                <span className="font-medium text-yellow-800">‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á</span>
              </div>
              <p className="text-sm text-yellow-700">
                ‡∏ß‡∏±‡∏ô{attendanceStats.worstAttendanceDay} ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
              </p>
            </div>
            
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <div className="flex items-center space-x-2 mb-2">
                <span className="text-blue-600">üí°</span>
                <span className="font-medium text-blue-800">‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</span>
              </div>
              <p className="text-sm text-blue-700">
                ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÑ‡∏ß‡πâ
              </p>
            </div>
          </div>
        </div>

        {/* Enhanced Charts & Analytics Section */}
        {viewMode === 'chart' && (
          <div className="bg-white rounded-xl shadow-lg p-6 mb-8">
            <h3 className="text-lg font-bold text-gray-900 mb-6 flex items-center">
              <span className="mr-2">üìä</span>
              ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
            </h3>
            
            <div className="grid lg:grid-cols-2 gap-8">
              {/* Attendance Trend Chart */}
              <div className="bg-gray-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-800 mb-4 flex items-center">
                  <span className="mr-2">üìà</span>
                  ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
                </h4>
                <div className="h-48 flex items-end justify-center space-x-2">
                  {[85, 92, 78, 95, 88, 90, 87].map((value, index) => (
                    <div key={index} className="flex flex-col items-center">
                      <div 
                        className="bg-blue-500 rounded-t w-8 min-h-[4px]"
                        style={{ height: `${(value / 100) * 120}px` }}
                      ></div>
                      <div className="text-xs text-gray-600 mt-2 text-center">
                        {['‡∏à', '‡∏≠', '‡∏û', '‡∏û‡∏§', '‡∏®', '‡∏™', '‡∏≠‡∏≤'][index]}
                      </div>
                      <div className="text-xs font-medium text-gray-800">
                        {value}%
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Attendance Distribution */}
              <div className="bg-gray-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-800 mb-4 flex items-center">
                  <span className="mr-2">üéØ</span>
                  ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                </h4>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600 flex items-center">
                      <div className="w-3 h-3 bg-green-500 rounded-full mr-2"></div>
                      ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤
                    </span>
                    <span className="font-medium">75%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-green-500 h-2 rounded-full" style={{ width: '75%' }}></div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600 flex items-center">
                      <div className="w-3 h-3 bg-yellow-500 rounded-full mr-2"></div>
                      ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏¢
                    </span>
                    <span className="font-medium">15%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-yellow-500 h-2 rounded-full" style={{ width: '15%' }}></div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600 flex items-center">
                      <div className="w-3 h-3 bg-red-500 rounded-full mr-2"></div>
                      ‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                    </span>
                    <span className="font-medium">10%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-red-500 h-2 rounded-full" style={{ width: '10%' }}></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Enhanced Student Performance Cards */}
        {viewMode === 'cards' && (
          <div className="bg-white rounded-xl shadow-lg p-6 mb-8">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-lg font-bold text-gray-900 flex items-center">
                <span className="mr-2">üèÜ</span>
                ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î
              </h3>
              <select className="border border-gray-300 rounded-lg px-3 py-2 text-sm text-gray-900 bg-white">
                <option>‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</option>
                <option>‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠</option>
                <option>‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</option>
              </select>
            </div>
            
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
              {attendanceData.map((student) => (
                <div key={student.id} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                  <div className="flex items-center space-x-3 mb-3">
                    <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                      <span className="text-blue-600 font-medium">
                        {student.name.charAt(0)}
                      </span>
                    </div>
                    <div>
                      <div className="font-medium text-gray-900">{student.name}</div>
                      <div className="text-sm text-gray-500">{student.studentId}</div>
                    </div>
                  </div>
                  
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="text-gray-600">‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</span>
                      <span className="font-medium">{student.attendanceRate}%</span>
                    </div>
                    <div className="w-full bg-gray-200 rounded-full h-2">
                      <div 
                        className={`h-2 rounded-full ${
                          student.attendanceRate >= 80 ? 'bg-green-500' :
                          student.attendanceRate >= 60 ? 'bg-yellow-500' : 'bg-red-500'
                        }`}
                        style={{ width: `${student.attendanceRate}%` }}
                      ></div>
                    </div>
                    
                    <div className="flex justify-between text-xs text-gray-500 mt-2">
                      <span>‡πÄ‡∏Ç‡πâ‡∏≤: {student.present}</span>
                      <span>‡∏™‡∏≤‡∏¢: {student.late}</span>
                      <span>‡∏Ç‡∏≤‡∏î: {student.absent}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Enhanced Daily Attendance Section (Table View) */}
        {viewMode === 'table' && (
          <>
            <div className="grid lg:grid-cols-2 gap-8 mb-8">
          <div className="bg-white rounded-xl shadow-lg p-6">
            <h3 className="text-lg font-bold text-gray-900 mb-4">‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</h3>
            <div className="space-y-3">
              {dailyStats.map((day, index) => (
                <div key={day.date} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div className="flex items-center space-x-3">
                    <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                      <span className="text-xs font-medium text-blue-600">{index + 1}</span>
                    </div>
                    <div>
                      <div className="font-medium text-gray-900">
                        {new Date(day.date).toLocaleDateString('th-TH', { 
                          weekday: 'long', 
                          day: 'numeric',
                          month: 'short'
                        })}
                      </div>
                      <div className="text-sm text-gray-500">
                        ‡∏°‡∏≤ {day.present} | ‡∏™‡∏≤‡∏¢ {day.late} | ‡∏Ç‡∏≤‡∏î {day.absent}
                      </div>
                    </div>
                  </div>
                  <div className={`px-3 py-1 rounded-full text-sm font-medium ${getAttendanceColor(day.rate)}`}>
                    {day.rate}%
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Weekly Pattern */}
          <div className="bg-white rounded-xl shadow-lg p-6">
            <h3 className="text-lg font-bold text-gray-900 mb-4">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô</h3>
            <div className="space-y-3">
              {weeklyPattern.map((day) => (
                <div key={day.day} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                      <span className="text-xs font-bold text-white">
                        {day.day.substring(0, 1)}
                      </span>
                    </div>
                    <div>
                      <div className="font-medium text-gray-900">{day.day}</div>
                      <div className="text-sm text-gray-500">{day.sessions} ‡∏Ñ‡∏≤‡∏ö</div>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className={`px-3 py-1 rounded-full text-sm font-medium ${getAttendanceColor(day.average)}`}>
                      {day.average}%
                    </div>
                    <div className="w-full bg-gray-200 rounded-full h-2 mt-2">
                      <div 
                        className="bg-blue-600 h-2 rounded-full transition-all duration-500"
                        style={{ width: `${day.average}%` }}
                      ></div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Student Performance Table */}
        <div className="bg-white rounded-xl shadow-lg overflow-hidden">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-bold text-gray-900">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h3>
          </div>
          
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡∏°‡∏≤
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡∏™‡∏≤‡∏¢
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡∏Ç‡∏≤‡∏î
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {studentStats
                  .sort((a, b) => b.rate - a.rate)
                  .map((student, index) => (
                  <tr key={student.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm ${
                        index === 0 ? 'bg-yellow-100 text-yellow-800' :
                        index === 1 ? 'bg-gray-100 text-gray-800' :
                        index === 2 ? 'bg-orange-100 text-orange-800' :
                        'bg-blue-100 text-blue-800'
                      }`}>
                        {index + 1}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-gray-900">{student.name}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-green-600 font-medium">{student.present}</span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-yellow-600 font-medium">{student.late}</span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-red-600 font-medium">{student.absent}</span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getAttendanceColor(student.rate)}`}>
                        {student.rate}%
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center space-x-1">
                        <span>{getTrendIcon(student.trend)}</span>
                        <span className={`text-xs ${
                          student.trend === 'up' ? 'text-green-600' :
                          student.trend === 'down' ? 'text-red-600' :
                          'text-gray-600'
                        }`}>
                          {student.trend === 'up' ? '‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô' :
                           student.trend === 'down' ? '‡πÅ‡∏¢‡πà‡∏•‡∏á' : '‡∏Ñ‡∏á‡∏ó‡∏µ‡πà'}
                        </span>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
          </>
        )}

        {/* Summary Insights - Always visible */}
        <div className="mt-8 bg-blue-50 border border-blue-200 rounded-xl p-6">
          <h3 className="font-bold text-blue-900 mb-4">üìä ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞</h3>
          <div className="grid md:grid-cols-2 gap-6 text-sm text-blue-800">
            <div>
              <h4 className="font-semibold mb-2">üìà ‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á</h4>
              <ul className="space-y-1">
                <li>‚Ä¢ ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ ({attendanceStats.averageAttendance}%)</li>
                <li>‚Ä¢ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ({attendanceStats.onTimeRate}%)</li>
                <li>‚Ä¢ ‡∏ß‡∏±‡∏ô{attendanceStats.bestAttendanceDay}‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-2">‚ö†Ô∏è ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á</h4>
              <ul className="space-y-1">
                <li>‚Ä¢ ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 80%</li>
                <li>‚Ä¢ ‡∏ß‡∏±‡∏ô{attendanceStats.worstAttendanceDay}‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î ‡∏Ñ‡∏ß‡∏£‡∏´‡∏≤‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏</li>
                <li>‚Ä¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏£‡∏á‡∏à‡∏π‡∏á‡πÉ‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      {/* Export Progress Modal */}
      {exportStatus.isExporting && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-2xl p-8 w-full max-w-md">
            <div className="text-center">
              <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <div className="animate-spin w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full"></div>
              </div>
              
              <h3 className="text-xl font-bold text-gray-900 mb-2">
                ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô {exportStatus.format}
              </h3>
              
              <p className="text-gray-600 mb-2">
                {exportStatus.currentMessage}
              </p>
              
              <p className="text-sm text-gray-500 mb-6">
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </p>

              {/* Progress Bar */}
              <div className="w-full bg-gray-200 rounded-full h-3 mb-4">
                <div 
                  className="bg-blue-600 h-3 rounded-full transition-all duration-1000 ease-out"
                  style={{ width: `${exportStatus.progress}%` }}
                ></div>
              </div>
              
              <div className="flex justify-between text-sm text-gray-500">
                <span>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤</span>
                <span>{exportStatus.progress}%</span>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Success Notification */}
      {exportStatus.success && (
        <div className="fixed top-4 right-4 z-50 animate-in slide-in-from-right duration-500">
          <div className="bg-white border-l-4 border-green-500 rounded-lg shadow-lg p-4 max-w-md">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                  <svg className="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                </div>
              </div>
              <div className="ml-3">
                <h4 className="text-sm font-medium text-gray-900">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h4>
                <p className="text-sm text-gray-500">
                  ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô {exportStatus.format} ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
                </p>
              </div>
              <div className="ml-auto">
                <button
                  onClick={() => setExportStatus(prev => ({ ...prev, success: false, currentMessage: '' }))}
                  className="text-gray-400 hover:text-gray-600 transition-colors"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Error Notification */}
      {exportStatus.error && (
        <div className="fixed top-4 right-4 z-50 animate-in slide-in-from-right duration-500">
          <div className="bg-white border-l-4 border-red-500 rounded-lg shadow-lg p-4 max-w-md">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
                  <svg className="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
              </div>
              <div className="ml-3">
                <h4 className="text-sm font-medium text-gray-900">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!</h4>
                <p className="text-sm text-gray-500">{exportStatus.error}</p>
              </div>
              <div className="ml-auto">
                <button
                  onClick={() => setExportStatus(prev => ({ ...prev, error: null, currentMessage: '' }))}
                  className="text-gray-400 hover:text-gray-600 transition-colors"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Toast Notification - Alternative Style */}
      {(exportStatus.success || exportStatus.error) && (
        <div className="fixed bottom-4 left-1/2 transform -translate-x-1/2 z-50">
          <div className={`
            px-6 py-3 rounded-full shadow-lg transition-all duration-500 transform
            ${exportStatus.success 
              ? 'bg-green-500 text-white animate-bounce' 
              : 'bg-red-500 text-white animate-pulse'
            }
          `}>
            <div className="flex items-center space-x-2">
              {exportStatus.success ? (
                <>
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  <span className="font-medium">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô {exportStatus.format} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ</span>
                </>
              ) : (
                <>
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span className="font-medium">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‚ùå</span>
                </>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  )
}